{
 "kind": "discovery#rpcDescription",
 "etag": "\"ADiYQGKhdYR9rpbhIFHih-UBYRs/-uPNz6_MSBt8sbBoYjPxB5trsNU\"",
 "discoveryVersion": "v1",
 "id": "bookSystem:v1",
 "name": "bookSystem",
 "version": "v1",
 "description": "This is an API",
 "icons": {
  "x16": "http://www.google.com/images/icons/product/search-16.gif",
  "x32": "http://www.google.com/images/icons/product/search-32.gif"
 },
 "protocol": "rpc",
 "rootUrl": "https://mac-books.appspot.com/_ah/api/",
 "rpcUrl": "https://mac-books.appspot.com/_ah/api/rpc",
 "rpcPath": "/_ah/api/rpc",
 "parameters": {
  "alt": {
   "type": "string",
   "description": "Data format for the response.",
   "default": "json",
   "enum": [
    "json"
   ],
   "enumDescriptions": [
    "Responses with Content-Type of application/json"
   ],
   "location": "query"
  },
  "fields": {
   "type": "string",
   "description": "Selector specifying which fields to include in a partial response.",
   "location": "query"
  },
  "key": {
   "type": "string",
   "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
   "location": "query"
  },
  "oauth_token": {
   "type": "string",
   "description": "OAuth 2.0 token for the current user.",
   "location": "query"
  },
  "prettyPrint": {
   "type": "boolean",
   "description": "Returns response with indentations and line breaks.",
   "default": "true",
   "location": "query"
  },
  "quotaUser": {
   "type": "string",
   "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.",
   "location": "query"
  },
  "userIp": {
   "type": "string",
   "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits.",
   "location": "query"
  }
 },
 "auth": {
  "oauth2": {
   "scopes": {
    "https://www.googleapis.com/auth/userinfo.email": {
     "description": "View your email address"
    }
   }
  }
 },
 "schemas": {
  "Book": {
   "id": "Book",
   "type": "object",
   "properties": {
    "author": {
     "type": "string"
    },
    "isbn": {
     "type": "string"
    },
    "title": {
     "type": "string"
    }
   }
  },
  "BookCollection": {
   "id": "BookCollection",
   "type": "object",
   "properties": {
    "items": {
     "type": "array",
     "items": {
      "$ref": "Book"
     }
    }
   }
  },
  "BookForSale": {
   "id": "BookForSale",
   "type": "object",
   "properties": {
    "book": {
     "$ref": "Book"
    },
    "price": {
     "type": "number",
     "format": "double"
    },
    "seller": {
     "$ref": "Seller"
    }
   }
  },
  "JsonMap": {
   "id": "JsonMap",
   "type": "object"
  },
  "SaleShelf": {
   "id": "SaleShelf",
   "type": "object",
   "properties": {
    "isbnToList": {
     "$ref": "JsonMap"
    },
    "isbnToMap": {
     "$ref": "JsonMap"
    },
    "list": {
     "type": "array",
     "items": {
      "$ref": "BookForSale"
     }
    },
    "sellerIdToList": {
     "$ref": "JsonMap"
    },
    "sellerIdToMap": {
     "$ref": "JsonMap"
    }
   }
  },
  "Seller": {
   "id": "Seller",
   "type": "object",
   "properties": {
    "email": {
     "type": "string"
    },
    "fFirstName": {
     "type": "string"
    },
    "fLastName": {
     "type": "string"
    },
    "firstName": {
     "type": "string"
    },
    "id": {
     "type": "string",
     "format": "int64"
    },
    "lastName": {
     "type": "string"
    }
   }
  },
  "SellerCollection": {
   "id": "SellerCollection",
   "type": "object",
   "properties": {
    "items": {
     "type": "array",
     "items": {
      "$ref": "Seller"
     }
    }
   }
  }
 },
 "methods": {
  "bookSystem.book.insert": {
   "id": "bookSystem.book.insert",
   "parameters": {
    "author": {
     "type": "string",
     "required": true
    },
    "isbn": {
     "type": "string",
     "required": true
    },
    "title": {
     "type": "string",
     "required": true
    }
   },
   "parameterOrder": [
    "isbn",
    "title",
    "author"
   ],
   "returns": {
    "$ref": "Book"
   },
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "bookSystem.bookforsale.delete": {
   "id": "bookSystem.bookforsale.delete",
   "parameters": {
    "email": {
     "type": "string",
     "required": true
    },
    "isbn": {
     "type": "string",
     "required": true
    }
   },
   "parameterOrder": [
    "email",
    "isbn"
   ],
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "bookSystem.bookforsale.getAllBooksBySeller": {
   "id": "bookSystem.bookforsale.getAllBooksBySeller",
   "allowGet": true,
   "parameters": {
    "personId": {
     "type": "string",
     "required": true,
     "format": "int64"
    }
   },
   "parameterOrder": [
    "personId"
   ],
   "returns": {
    "$ref": "BookCollection"
   },
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "bookSystem.bookforsale.getAllSellersOfBook": {
   "id": "bookSystem.bookforsale.getAllSellersOfBook",
   "allowGet": true,
   "parameters": {
    "ISBN": {
     "type": "string",
     "required": true
    }
   },
   "parameterOrder": [
    "ISBN"
   ],
   "returns": {
    "$ref": "SellerCollection"
   },
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "bookSystem.bookforsale.getBookByISBN": {
   "id": "bookSystem.bookforsale.getBookByISBN",
   "allowGet": true,
   "parameters": {
    "ISBN": {
     "type": "string",
     "required": true
    }
   },
   "parameterOrder": [
    "ISBN"
   ],
   "returns": {
    "$ref": "Book"
   },
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "bookSystem.bookforsale.getSellerByEmail": {
   "id": "bookSystem.bookforsale.getSellerByEmail",
   "allowGet": true,
   "parameters": {
    "email": {
     "type": "string",
     "required": true
    }
   },
   "parameterOrder": [
    "email"
   ],
   "returns": {
    "$ref": "Seller"
   },
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "bookSystem.bookforsale.getSellerByID": {
   "id": "bookSystem.bookforsale.getSellerByID",
   "allowGet": true,
   "parameters": {
    "personId": {
     "type": "string",
     "required": true,
     "format": "int64"
    }
   },
   "parameterOrder": [
    "personId"
   ],
   "returns": {
    "$ref": "Seller"
   },
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "bookSystem.bookforsale.insert": {
   "id": "bookSystem.bookforsale.insert",
   "parameters": {
    "Price": {
     "type": "number",
     "required": true,
     "format": "double"
    },
    "author": {
     "type": "string",
     "required": true
    },
    "email": {
     "type": "string",
     "required": true
    },
    "first_name": {
     "type": "string",
     "required": true
    },
    "isbn": {
     "type": "string",
     "required": true
    },
    "last_name": {
     "type": "string",
     "required": true
    },
    "title": {
     "type": "string",
     "required": true
    }
   },
   "parameterOrder": [
    "isbn",
    "title",
    "author",
    "email",
    "first_name",
    "last_name",
    "Price"
   ],
   "returns": {
    "$ref": "BookForSale"
   },
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "bookSystem.bookforsale.list": {
   "id": "bookSystem.bookforsale.list",
   "allowGet": true,
   "returns": {
    "$ref": "SaleShelf"
   },
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "bookSystem.bookforsale.listAll": {
   "id": "bookSystem.bookforsale.listAll",
   "allowGet": true,
   "returns": {
    "$ref": "SaleShelf"
   },
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "bookSystem.bookforsale.listBooksAndSellers": {
   "id": "bookSystem.bookforsale.listBooksAndSellers",
   "allowGet": true,
   "returns": {
    "$ref": "JsonMap"
   },
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "bookSystem.seller.insert": {
   "id": "bookSystem.seller.insert",
   "parameters": {
    "email": {
     "type": "string",
     "required": true
    },
    "first_name": {
     "type": "string",
     "required": true
    },
    "last_name": {
     "type": "string",
     "required": true
    }
   },
   "parameterOrder": [
    "email",
    "first_name",
    "last_name"
   ],
   "returns": {
    "$ref": "Seller"
   },
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  }
 }
}
